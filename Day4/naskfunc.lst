     1 00000000                                 ; naskfunc
     2 00000000                                 ; TAB=4
     3 00000000                                 
     4 00000000                                 [FORMAT "WCOFF"]				; 制作目标文件的模式
     5 00000000                                 [INSTRSET "i486p"]				; 说明使用的是486命令
     6 00000000                                 [BITS 32]						; 32位模式的机器语言
     7 00000000                                 
     8 00000000                                 
     9 00000000                                 ; 制作目标文件的信息
    10 00000000                                 
    11 00000000                                 [FILE "naskfunc.nas"]			; 源文件名信息
    12 00000000                                 
    13 00000000                                 		GLOBAL	_io_hlt, _io_cli, _io_sti, _io_stihlt
    14 00000000                                 		GLOBAL	_io_in8, _io_in16, _io_in32
    15 00000000                                 		GLOBAL	_io_out8, _io_out16, _io_out32
    16 00000000                                 		GLOBAL	_io_load_eflags, _io_store_eflags
    17 00000000                                 		
    18 00000000                                 ; 实际的函数
    19 00000000                                 
    20                                          [SECTION .text]		; 目标文件中写了这些后再写程序
    21 00000000                                 
    22 00000000                                 _io_hlt:	; 对应C语言中 void io_hlt(void);
    23 00000000 F4                              		HLT
    24 00000001 C3                              		RET
    25 00000002                                 
    26 00000002                                 _io_cli:	; void io_cli(void)
    27 00000002 FA                              		CLI
    28 00000003 C3                              		RET
    29 00000004                                 
    30 00000004                                 _io_sti:	; void io_sti(void)
    31 00000004 FB                              		STI
    32 00000005 C3                              		RET
    33 00000006                                 
    34 00000006                                 _io_stihlt:	; void io_stihlt(void)
    35 00000006 FB                              		STI
    36 00000007 F4                              		HLT
    37 00000008 C3                              		RET
    38 00000009                                 
    39 00000009                                 _io_in8:	; int io_in8(int port)
    40 00000009 8B 54 24 04                     		MOV		EDX,[ESP+4]
    41 0000000D B8 00000000                     		MOV		EAX,0
    42 00000012 EC                              		IN		AL,DX
    43 00000013 C3                              		RET
    44 00000014                                 
    45 00000014                                 _io_in16:	; int io_in16(int port)
    46 00000014 8B 54 24 04                     		MOV		EDX,[ESP+4]
    47 00000018 B8 00000000                     		MOV		EAX,0
    48 0000001D 66 ED                           		IN		AX,DX
    49 0000001F C3                              		RET
    50 00000020                                 
    51 00000020                                 _io_in32:	; int io_in32(int port)
    52 00000020 8B 54 24 04                     		MOV		EDX,[ESP+4]
    53 00000024 ED                              		IN		EAX,DX
    54 00000025 C3                              		RET
    55 00000026                                 
    56 00000026                                 _io_out8:	; void io_out8(int port, int data)
    57 00000026 8B 54 24 04                     		MOV		EDX,[ESP+4]
    58 0000002A 8A 44 24 08                     		MOV		AL,[ESP+8]
    59 0000002E EE                              		OUT		DX,AL
    60 0000002F C3                              		RET
    61 00000030                                 
    62 00000030                                 _io_out16:	; void io_out16(int port, int data)
    63 00000030 8B 54 24 04                     		MOV		EDX,[ESP+4]
    64 00000034 8B 44 24 08                     		MOV		EAX,[ESP+8]
    65 00000038 66 EF                           		OUT		DX,AX
    66 0000003A C3                              		RET
    67 0000003B                                 
    68 0000003B                                 _io_out32:	; void io_out32(int port, int data)
    69 0000003B 8B 54 24 04                     		MOV		EDX,[ESP+4]
    70 0000003F 8B 44 24 08                     		MOV		EAX,[ESP+8]
    71 00000043 EF                              		OUT		DX,EAX
    72 00000044 C3                              		RET
    73 00000045                                 
    74 00000045                                 _io_load_eflags:	; int io_load_eflags(void)
    75 00000045 9C                              		PUSHFD
    76 00000046 58                              		POP		EAX
    77 00000047 C3                              		RET
    78 00000048                                 
    79 00000048                                 _io_store_eflags:	; void io_store_eflags(int eflags)
    80 00000048 8B 44 24 04                     		MOV		EAX,[ESP+4]
    81 0000004C 50                              		PUSH	EAX
    82 0000004D 9D                              		POPFD
    83 0000004E C3                              		RET